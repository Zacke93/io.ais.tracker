'use strict';

const RealAppTestRunner = require('./RealAppTestRunner');

/**
 * REAL APP TEST: North to South Journey
 *
 * This test uses the COMPLETE app.js logic including:
 * - VesselDataService (real vessel management)
 * - StatusService (real status analysis)
 * - ProximityService (real distance calculations)
 * - BridgeTextService (real bridge text generation)
 * - All event-driven communication
 * - Real target bridge assignment logic
 * - Real timeout and cleanup mechanisms
 */

async function runRealScenario1() {
  const runner = new RealAppTestRunner();

  // DETALJERAT TEST - varje bro testas vid exakt 300m och 50m avst√•nd
  // Detta visar exakt n√§r approach (300m) och under-bridge (50m) triggers
  // Ordning: Stallbacka ‚Üí Stridsbergsbron ‚Üí J√§rnv√§g ‚Üí Klaffbron ‚Üí Olidebron
  const realJourneySteps = [
    {
      description: 'üö¢ Start: B√•t l√•ngt norr om alla broar',
      vessels: [
        {
          mmsi: '265123456',
          name: 'M/V Nordkap',
          lat: 58.320, // Far north
          lon: 12.320,
          sog: 4.5,
          cog: 180, // Southbound
        },
      ],
    },

    // === STALLBACKABRON (mellanbro) ===
    {
      description: 'üìç Stallbackabron: 300m avst√•nd (approach radius)',
      vessels: [
        {
          mmsi: '265123456',
          name: 'M/V Nordkap',
          lat: 58.31415, // ~300m north of Stallbacka
          lon: 12.31726,
          sog: 4.2,
          cog: 180,
        },
      ],
    },

    {
      description: 'üìç Stallbackabron: 50m avst√•nd (under-bridge zone)',
      vessels: [
        {
          mmsi: '265123456',
          name: 'M/V Nordkap',
          lat: 58.31188, // ~50m north of Stallbacka
          lon: 12.31501,
          sog: 3.8,
          cog: 180,
        },
      ],
    },

    {
      description: 'üìç Mellan Stallbacka och Stridsbergsbron',
      vessels: [
        {
          mmsi: '265123456',
          name: 'M/V Nordkap',
          lat: 58.302, // Between bridges
          lon: 12.305,
          sog: 4.0,
          cog: 180,
        },
      ],
    },

    // === STRIDSBERGSBRON (M√ÖLBRO) ===
    {
      description: 'üéØ Stridsbergsbron (M√ÖLBRO): 300m avst√•nd (approach radius)',
      vessels: [
        {
          mmsi: '265123456',
          name: 'M/V Nordkap',
          lat: 58.2962, // ~300m north of Stridsbergsbron
          lon: 12.2972,
          sog: 3.9,
          cog: 180,
        },
      ],
    },

    {
      description: 'üéØ Stridsbergsbron (M√ÖLBRO): 50m avst√•nd (under-bridge zone)',
      vessels: [
        {
          mmsi: '265123456',
          name: 'M/V Nordkap',
          lat: 58.29397, // ~50m north of Stridsbergsbron
          lon: 12.29501,
          sog: 3.5,
          cog: 180,
        },
      ],
    },

    {
      description: 'üìç Mellan Stridsbergsbron och J√§rnv√§gsbron',
      vessels: [
        {
          mmsi: '265123456',
          name: 'M/V Nordkap',
          lat: 58.2926, // Between bridges
          lon: 12.2930,
          sog: 4.1,
          cog: 180,
        },
      ],
    },

    // === J√ÑRNV√ÑGSBRON (mellanbro) ===
    {
      description: 'üìç J√§rnv√§gsbron: 300m avst√•nd (approach radius)',
      vessels: [
        {
          mmsi: '265123456',
          name: 'M/V Nordkap',
          lat: 58.29437, // ~300m north of J√§rnv√§gsbron
          lon: 12.29472,
          sog: 3.8,
          cog: 180,
        },
      ],
    },

    {
      description: 'üìç J√§rnv√§gsbron: 50m avst√•nd (under-bridge zone)',
      vessels: [
        {
          mmsi: '265123456',
          name: 'M/V Nordkap',
          lat: 58.29209, // ~50m north of J√§rnv√§gsbron
          lon: 12.29247,
          sog: 3.6,
          cog: 180,
        },
      ],
    },

    {
      description: 'üìç Mellan J√§rnv√§gsbron och Klaffbron',
      vessels: [
        {
          mmsi: '265123456',
          name: 'M/V Nordkap',
          lat: 58.288, // Between bridges
          lon: 12.288,
          sog: 3.9,
          cog: 180,
        },
      ],
    },

    // === KLAFFBRON (M√ÖLBRO) ===
    {
      description: 'üéØ Klaffbron (M√ÖLBRO): 300m avst√•nd (approach radius)',
      vessels: [
        {
          mmsi: '265123456',
          name: 'M/V Nordkap',
          lat: 58.2868, // ~300m north of Klaffbron
          lon: 12.2866,
          sog: 3.7,
          cog: 180,
        },
      ],
    },

    {
      description: 'üéØ Klaffbron (M√ÖLBRO): 100m avst√•nd (approaching)',
      vessels: [
        {
          mmsi: '265123456',
          name: 'M/V Nordkap',
          lat: 58.2849, // ~100m north of Klaffbron
          lon: 12.2847,
          sog: 3.2,
          cog: 180,
        },
      ],
    },

    {
      description: 'üéØ Klaffbron (M√ÖLBRO): Saktar ner och v√§ntar (waiting test)',
      vessels: [
        {
          mmsi: '265123456',
          name: 'M/V Nordkap',
          lat: 58.28450, // Close to Klaffbron
          lon: 12.28430,
          sog: 0.15, // Very slow - should trigger waiting
          cog: 180,
        },
      ],
      delaySeconds: 3,
    },

    {
      description: 'üéØ Klaffbron (M√ÖLBRO): 50m avst√•nd (under-bridge zone)',
      vessels: [
        {
          mmsi: '265123456',
          name: 'M/V Nordkap',
          lat: 58.28454, // ~50m north of Klaffbron
          lon: 12.28438,
          sog: 3.0,
          cog: 180,
        },
      ],
    },

    {
      description: 'üìç Mellan Klaffbron och Olidebron',
      vessels: [
        {
          mmsi: '265123456',
          name: 'M/V Nordkap',
          lat: 58.278, // Between bridges
          lon: 12.279,
          sog: 4.0,
          cog: 180,
        },
      ],
    },

    // === OLIDEBRON (mellanbro) ===
    {
      description: 'üìç Olidebron: 300m avst√•nd (approach radius)',
      vessels: [
        {
          mmsi: '265123456',
          name: 'M/V Nordkap',
          lat: 58.2755, // ~300m north of Olidebron
          lon: 12.2778,
          sog: 3.9,
          cog: 180,
        },
      ],
    },

    {
      description: 'üìç Olidebron: 50m avst√•nd (under-bridge zone)',
      vessels: [
        {
          mmsi: '265123456',
          name: 'M/V Nordkap',
          lat: 58.27319, // ~50m north of Olidebron
          lon: 12.27556,
          sog: 3.6,
          cog: 180,
        },
      ],
    },

    {
      description: 'üèÅ Sluttest: B√•t l√•ngt s√∂der om alla broar',
      vessels: [
        {
          mmsi: '265123456',
          name: 'M/V Nordkap',
          lat: 58.268, // Far south
          lon: 12.270,
          sog: 4.2,
          cog: 180,
        },
      ],
    },

    {
      description: 'üóëÔ∏è Cleanup: B√•t f√∂rsvinner fr√•n systemet',
      vessels: [], // Empty = simulate vessel cleanup
    },
  ];

  try {
    console.log('üöÄ Starting REAL APP Journey Test...\n');

    const results = await runner.runRealJourney(
      'REAL APP: North to South Complete Journey',
      realJourneySteps,
    );

    console.log('\nüîç REAL APP ANALYSIS:');
    console.log('- Detta testar HELA app.js kedjan, inte bara BridgeTextService');
    console.log('- Inkluderar verklig m√•lbro-tilldelning baserat p√• COG och position');
    console.log('- Inkluderar verklig status-analys (approaching/waiting/under-bridge)');
    console.log('- Inkluderar verklig avst√•ndsber√§kning och ETA');
    console.log('- Inkluderar verklig timeout och cleanup logik');
    console.log('- Inkluderar verklig event-driven kommunikation mellan services');

    console.log('\nüí° NU KAN VI SE:');
    console.log('1. Exakt hur m√•lbro tilldelas automatiskt');
    console.log('2. Exakt n√§r status √§ndras fr√•n approaching ‚Üí waiting ‚Üí under-bridge');
    console.log('3. Exakt hur ETA ber√§knas fr√•n verklig hastighet och avst√•nd');
    console.log('4. Exakt hur bridge_text genereras fr√•n verklig data');
    console.log('5. Alla problem i den verkliga logiken, inte bara BridgeTextService');

    return results;

  } catch (error) {
    console.error('‚ùå Error during real app test:', error);
    throw error;
  } finally {
    await runner.cleanup();
  }
}

// Run the test
if (require.main === module) {
  runRealScenario1()
    .then(() => {
      console.log('\n‚úÖ Real app test completed successfully!');
    })
    .catch((error) => {
      console.error('‚ùå Real app test failed:', error);
      throw error;
    });
}

module.exports = runRealScenario1;
